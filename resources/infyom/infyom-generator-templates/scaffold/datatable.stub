<?php

namespace $NAMESPACE_DATATABLES$;

use $NAMESPACE_MODEL$\$MODEL_NAME$;
use Yajra\DataTables\Services\DataTable;
use Yajra\DataTables\EloquentDataTable;

class $MODEL_NAME$DataTable extends DataTable
{
    /**
     * Build DataTable class.
     *
     * @param mixed $query Results from query() method.
     * @return \Yajra\DataTables\DataTableAbstract
     */
    public function dataTable($query)
    {
        $dataTable = new EloquentDataTable($query);

        return $dataTable->addColumn('action', '$VIEW_PREFIX$$MODEL_NAME_PLURAL_SNAKE$.datatables_actions');
    }

    /**
     * Get query source of dataTable.
     *
     * @param \App\Models\$MODEL_NAME$ $model
     * @return \Illuminate\Database\Eloquent\Builder
     */
    public function query($MODEL_NAME$ $model)
    {
        return $model->newQuery();
    }

    /**
     * Optional method if you want to use html builder.
     *
     * @return \Yajra\DataTables\Html\Builder
     */
    public function html()
    {
        return $this->builder()
            ->columns($this->getColumns())
            ->minifiedAjax()
            ->addAction(['width' => '120px', 'title' => 'Ações', 'printable' => false])
            ->parameters([
             'dom'       => 'Bfrltip',
             "pageLength" => 10,
             'stateSave' => true,
             'language' => [
                 "url" => asset("vendor/datatables/Portuguese-Brasil.json")
             ],
             'order'     => [[0, 'desc']],
             'buttons'   => [
                 ['extend' => 'create', 'className' => 'btn btn-ghost-dark btn-sm no-corner',],
                 ['extend' => 'export', 'className' => 'btn btn-ghost-dark btn-sm no-corner',],
                 ['extend' => 'print', 'className' => 'btn btn-ghost-dark btn-sm no-corner',],
                 ['extend' => 'reset', 'className' => 'btn btn-ghost-dark btn-sm no-corner',],
                 ['extend' => 'reload', 'className' => 'btn btn-ghost-dark btn-sm no-corner',],
             ],
             'initComplete' => 'function (oSettings) {
                 max = this.api().columns().count();
                 this.api().columns().every(function (col) {
                     var column = this;
                     if ((col+1) < max) {
                         var input = document.createElement("input");
                         $(input).attr(\'placeholder\',\'Filtrar...\');
                         $(input).addClass(\'form-control headFilter\');
                         $(input).css(\'width\',\'100%\');
                         $(input).appendTo($(column.footer()).empty())
                         .on(\'change\', function () {
                             column.search($(this).val(), false, false, true).draw();
                         });
                     } else {
                          var btnClear = document.createElement("button");
                          $(btnClear).html("<i class='fa fa-recycle'></i>");
                          $(btnClear).prop("title","Limpar Filtros");
                          $(btnClear).prop("class","btn btn-xs btn-default");
                          $(btnClear).attr("onclick","clearFilters()");
                          $(btnClear).appendTo($(column.footer()).empty());
                     }
                 });
                 stateValuesOnFilters(oSettings);
             }'
         ]);
    }

    /**
     * Get columns.
     *
     * @return array
     */
    protected function getColumns()
    {
        return [
            $DATATABLE_COLUMNS$
        ];
    }

    /**
     * Get filename for export.
     *
     * @return string
     */
    protected function filename()
    {
        return '$MODEL_NAME_PLURAL_SNAKE$datatable_' . time();
    }
}
